"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8301],{8066:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"bsc-2022-end-of-year-report","metadata":{"permalink":"/hashdit/blog/bsc-2022-end-of-year-report","source":"@site/blog/2022-12-26/2022-12-26.md","title":"2022 End of Year BSC Security Report","description":"Overview","date":"2022-12-26T00:00:00.000Z","formattedDate":"December 26, 2022","tags":[{"label":"smart-contract-security","permalink":"/hashdit/blog/tags/smart-contract-security"},{"label":"end-of-year-report","permalink":"/hashdit/blog/tags/end-of-year-report"},{"label":"bsc","permalink":"/hashdit/blog/tags/bsc"},{"label":"2022","permalink":"/hashdit/blog/tags/2022"}],"readingTime":22.045,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Lim","title":"SCS@HashDit","url":"https://github.com/slim115","imageURL":"https://github.com/slim115.png","key":"Sebastian"},{"name":"Chris","title":"SCS@HashDit","key":"Chris"},{"name":"Loic","title":"SCS@HashDit","url":"https://github.com/theexoticman","imageURL":"https://github.com/theexoticman.png","key":"Loic"}],"frontMatter":{"slug":"bsc-2022-end-of-year-report","title":"2022 End of Year BSC Security Report","authors":["Sebastian","Chris","Loic"],"tags":["smart-contract-security","end-of-year-report","bsc","2022"]},"nextItem":{"title":"Repackaged Apps are harmful","permalink":"/hashdit/blog/repackaged-apps-are-harmful"}},"content":"### Overview\\n\\n<div align=\\"justify\\">\\n\\nThis report focuses on security events that happened on BSC in 2022, analyzing the type of projects targeted and sharing the common attack techniques used in 2022, with respect to the financial loss of the incidents.\\n\\nThis report also examines the trends on BSC from 2020 to 2022 to help give readers a better understanding of how the space has grown. Lastly, this report shares some of the products we at Hashdit have developed, and what risks can be covered by the capabilities that Hashdit have/are building.\\n\\n\\n#### Tl;DR\\n\\nSecurity incidents on BSC have risen since 2020. In 2022 alone, nearly $1.05 billion on BSC were lost to malicious actors, where 80% was due to hacks. \\n\\nIn total, there were 282 security incidents, an average of roughly 23 incidents per month. Out of which, 62% were scams / rugpulls. \\n\\n#### Disclaimer\\n\\nThe financial data provided here is accurate based on our own monitoring system and based on the $USD amount of the cryptocurrency involved at the time of the incident. Due to the fluctuating price nature of cryptocurrencies, the total amount loss might differ with the current token valuations.\\n\\n#### BSC Growth\\n\\nThis year has been a year of building and growth on BSC. Despite the general cryptocurrency bear market and black swan events like [Luna](https://vulcanpost.com/791820/terra-luna-timeline-how-crash-revival-plan/) and [FTX](https://www.investopedia.com/what-went-wrong-with-ftx-6828447), BSC has continued to reach new milestones and surpass expectations.\\n\\nHere is a list of some of BSC\u2019s achievements in 2022: [Refer to the [blog](https://www.bnbchain.org/en/blog/bnb-chain-enjoys-significant-growth-in-2022-despite-crypto-winter/) released by BNBChain for more information]\\n\\n- $1 billion growth [fund](https://www.bsc.news/post/bsc-releases-areas-of-investment-focus-for-its-1-billion-growth-fund)\\n- [AvengerDAO](https://www.bnbchain.org/en/blog/introducing-avengerdao-the-security-initiative-protecting-users-from-malicious-actors/) Launch \\n- Implement [Liquidity Staking](https://www.coindesk.com/business/2022/08/30/bnb-chain-introduces-liquid-staking-to-provide-crypto-users-access-to-additional-income-streams/) on BSC and [Binance Account-Based](https://www.binance.com/en/BABT) (BAB) tokens\\n- OpenSea incorporates [BSC](https://www.coindesk.com/web3/2022/11/29/opensea-adds-support-for-bnb-chain-nfts/)\\n- [zkBNB](https://www.cryptotimes.io/bnb-chain-unveils-zero-knowledge-proof-scaling-tech-zkbnb/) launched on Testnet\\n- Unique addresses crossed **234 million**. Source: [BscScan](https://bscscan.com/chart/address)\\n\\n![IMG-1](./image9.png)\\n<p align=\\"center\\">\\nFigure 1: Number of BNB Smart Chain unique addresses over the year 2022\\n</p>\\n\\n- Peak TVL - **USD 16.25b** on Jan 3. TVL trend as per screenshot. Source: [Defillama](https://defillama.com/chain/BSC)\\n\\n![IMG-2](./image10.png)\\n<p align=\\"center\\">\\nFigure 2: Total Value Locked in the BNB Smart chain ecosystem over the year 2022\\n</p>\\n\\n- Transactions\\n    - Peak Txs: **9.78 million** txs on 13th May\\n    - Avg Daily txs since 01 Jan: **4.34 million txs**  \\n    - **More than 3.7 billion txs** on BSC\\n\\n- Active Wallet Addresses (DAU)\\n    - Peak Daily Active Wallets (DAU): **2.16 million DAU** on 12th Oct \\n    - Avg Daily AUs since 01 Jan: **968k** DAU ( compared to **740k DAU**  in 2021) \\n        - [Stabilization](https://bscscan.com/chart/active-address) of daily active users, which may suggest a foundational user base of an average of **~1 million** per day\\n    - Currently ranked no. 1 compared to other chains in terms of DAU \\n\\n- Number of Decentralized Applications (DApps)\\n    - **~1200** active on BSC \\n\\n\\n\\n### BSC Year-over-Year (YoY)\\n\\nThe on-chain metrics can signal the growing adoption of the BNB Smart Chain as the preferred chain to use and build by investors and developers respectively. However, due to BSC\u2019s decentralization nature and its fast growth to more than 1200 DApps, more bad actors have been attracted to the space as well. As such, security incidents have generally been on a rising trend.\\n\\nThis section aims to describe the security incidents YoY from 2020 to 2022. \\n\\n#### General\\n\\nAccording to our statistics, in 2022, there were 282 security incidents on BSC which have increased by 228% YoY from 2021. In 2021, there were 86 security incidents, a 760% increase from 2020.\\n\\n![IMG-3](./no_of_incidents.png)\\n<p align=\\"center\\">\\nFigure 3: Number of incidents on the BNB Smart Chain over the last 3 years\\n</p>\\n\\nFinancial losses have also increased from 2020 to 2022, with damages totalling $1.81 billion over the past 3 years, as seen from the chart below. The YoY increase from 2020 to 2021 is 61,221%, while the YoY increase from 2021 to 2022 is 37%, a large decline in YoY percentage.  \\n\\n![IMG-4](./fiat_loss_yoy.png)\\n<p align=\\"center\\">\\nFigure 4: Total amount stolen funds in dollars in the BNB Smart Chain over the last 3 years\\n</p>\\n\\nBy analyzing the ratio of the <ins>total amount of stolen funds</ins> to the <ins>total number of incidents</ins>, we observed that the <ins>average of stolen funds per incident</ins> has decreased. \\n\\nIndeed, in 2021, the average of stolen funds per incident was calculated to be $8.9m. In contrast, in 2022,  this value dropped to just $3.7m - even when there were several considerable events that represent almost half of the stolen funds. This shows that the number of security exploits with high financial impact is decreasing. Such decrease could be explained by the fact that projects with important funds are better secured and are more battle-tested. As such, malicious actors seem to be focusing their efforts on projects with more modest funds, concluding in lesser value exploits.\\n\\nThis pie chart shows a better understanding of the financial losses over the year with 2022 accounting for 57.84% of the total financial loss across, 2021 being 42.10% and 2020 with a mere 0.07%.\\n\\n![IMG-5](./financial_loss_annual.png)\\n<p align=\\"center\\">\\nFigure 5: Financial losses in % over the last 3 years\\n</p>\\n\\n#### Type of attack vectors\\nAccording to our statistics, this is the breakdown of the general attack vectors from 2020 - 2022.\\n\\n![IMG-6](./general_attack_type.png)\\n<p align=\\"center\\">\\nFigure 6: Number of incidents per attack vector over the last 3 years\\n</p>\\n\\nIt can be seen that crypto scams (in green) are a growing concern on the BSC, with 167 in 2022, a 328% increase YoY. Also, there were 2 counts of improper management incidents in 2022, which were never accounted for previously. This seems to suggest that project parties might not be following the best practices in securing user funds. When managing critical components such as team wallets\u2019 private keys, it is important to use a secure management system. \\n\\nDo stay tuned to our [blogs](https://hashdit.github.io/hashdit/blog) if you are interested in best practice guides for securing your Web3 project.\\n\\n#### Type of projects\\n\\nThis chart represents the type of projects that were exploited since 2020.\\n![IMG-7](./project_type.png)\\n<p align=\\"center\\">\\nFigure 7: Security Incidents per type of project over the last 3 years\\n</p>\\n\\nIt is clear that DeFi projects are still the main targets for crypto hackers, with 208 in 2022, a 147% increase from 2021. \\n\\nBridge and GameFi projects were the only other projects which encountered security incidents in 2021, besides DeFi projects. In total, 9 Bridge and 19 GameFi projects were exploited, a 800% and 1800% increase respectively from 2021.\\n\\nWith the expansion of the BSC ecosystem, other categories of projects came into the limelight such as ExerciseFi and SocialFi, which did not exist back in 2021. Some of these projects were victims of hacks as well.\\n\\n### 2022 in focus\\n\\n#### General\\nIn total, nearly $1.05 billion were lost to security incidents on BSC. By observing the monthly chart below, the months with the top amount loss were October, January followed by June. \\n\\n![IMG-8](./fiat_loss.png)\\n<p align=\\"center\\">\\nFigure 8: Amount of stolen funds in dollars per month in 2022\\n</p>\\n\\nIn those months, the main contributing incidents were (1) BSC token hub exploit, (2) Qubit exploit, and lastly the (3) EvoDefi bridge mismanagement incident.  \\n\\nInterestingly, when removing these 3 outlier incidents from the chart, the total financial loss drops down to just $346.9m, a staggering 67% drop or one-third of total amount loss of 2022. Also, the average of stolen funds per incident falls to $1.2m, from the $3.7m value shared earlier in the report.\\n\\n![IMG-9](./special_charts_1.png)\\n<p align=\\"center\\">\\nFigure 9: Amount of stolen funds in dollars excluding the 3 largest incidents\\n</p>\\n\\nThis chart is closely correlated to the number of security incidents monthly in 2022. \\n\\n![IMG-10](./no_of_incidents(1).png)\\n<p align=\\"center\\">\\nFigure 10: Number of different project impacted by exploits\\n</p>\\n\\nFor example, the highest number of security incidents took place in October which is in line with the highest amount of loss.\\n\\nHowever, months that have a higher number of security incidents might have a low amount of loss too. For example, even though August has 29 security incidents which is above the monthly average (23), the financial loss for that month is only $8m which is the 2nd lowest throughout the year. Such data reinforces the fact that we are seeing more incidents with lesser financial impact.\\n\\n#### Type of attack vectors\\n\\nOut of the 282 security incidents, crypto scams are the most common on the BNB Chain as shown below, 62.06% of security incidents are crypto scams, followed by 37.23% being hacks and 0.71% being improper management such as mismanagement of private keys.\\n\\n![IMG-11](./Attack_method_number_of_incidents.png)\\n<p align=\\"center\\">\\nFigure 11: Proportion of different type of exploits\\n</p>\\n\\nHowever, it is interesting to note that even when the number of scams are nearly double of hacks, the financial impact of scams are less significant than the ones related to the hacks. The total financial loss of scams ($190m) is less than half of the loss to hacks ($803m), as shown below in Figure 12.\\n\\n![IMG-12](./financial_loss_per_general_attack_type.png)\\n<p align=\\"center\\">\\nFigure 12: Financial impact measured in dollars comparing different types of incidents\\n</p>\\n\\nFor further analysis of the specific attack vectors, this chart displays this against the financial loss in 2022.\\n\\n![IMG-13](./financial_loss_per_specific_attack_type.png)\\n<p align=\\"center\\">\\nFigure 13: Proportion of the funds lost comparing the different type of vulnerabilities\\n</p>\\n\\n32.93% attributes to the BSC token hub exploit incident where there was a low level vulnerability, specifically an [IAVL](https://pkg.go.dev/github.com/cosmos/iavl) tree related verification bug. The 2nd largest contributor was Business Logic Vulnerabilities within smart contracts deployed on BSC, accounting for 29.45%. \\n\\nIt is notable here that \u201clow-level\u201d scams like Rugpull and Ponzi, even though they are the most common, do not take up much of the proportion as seen in the pie chart.\\n\\n#### Type of projects\\n\\nWhen focusing on the project type vs financial loss, without surprise, 60.38% of financial loss are attributed to Bridge projects. This is because cross-chain bridges generally lock large amounts of crypto assets on one chain to mint collateralized assets on the destination chain. Hackers took notice of this trend and targeted vulnerabilities within these cross-chain bridge smart contracts.\\n\\nThe 2nd most project type targeted was DeFi projects at 37.06%, followed by GameFi and Metaverse projects at 1.22% and 1.08% respectively. \\n\\n![IMG-14](./financial_loss_per_project_type_distribution.png)\\n<p align=\\"center\\">\\nFigure 14: Proportion of funds lost comparing the type of project \\n</p>\\n\\n#### Top 10 incidents in 2022 \\n\\nThe following were the top 10 security incidents in terms of financial loss in 2022. \\n\\n![IMG-15](./top_10_incidents_bsc.png)\\n<p align=\\"center\\">\\nFigure 15: Top exploits measured in dollars in 2022 on the BNB Smart Chain\\n</p>\\n\\n#### Top 10 incidents in 2022 \\n\\n##### BSC Token Hub exploit - $572 Million Loss\\n\\nOn 6th October 2022, BSC Token hub, a bridge between the BNB Beacon Chain and the BNB Smart Chain, was exploited by an attacker resulting in the unauthorized transfer of 2M BNB.\\n\\nRoot cause analysis confirmed a flaw in the verification algorithm implementation developed by Cosmos, and incorporated by BSC into their contract\u2019s proof verification process. Essentially, there was a bug in the proof verification which allowed the attacker to forge arbitrary messages and include them in a block that wouldn\u2019t be verified. Fortunately, the attacker here only forged two messages, so the damage could have been far worse.\\n\\n##### QubitFinance - $80 Million Loss\\n\\nOn 27th Jan 2022, the Qubit protocol was exploited, resulting in almost $80M loss. Qubit Bridge is essentially a platform for users to collateralize their ETH on the Ethereum chain without moving assets to BSC. The incident was due to a flawed minting functionality of qXETH on BSC where the tokens were later used for borrowing assets via Qubit lending. \\n\\nRoot cause analysis was that a legacy function (deposit) remained in the Qbridge Handler contract after it was replaced by a newer function (depositETH).\\n\\nThe legacy function did not check the amount of tokens, in this case WETH, supposed to be transferred in. As a result, the attacker was able to pass in the 0x0 address to fake a deposit event.\\n\\n##### EvoDefi - $50 Million Loss\\n\\nThe team behind EVODeFi, a cross-chain platform offering a set of crypto products on BNB Smart Chain (BSC) & Polygon, invested users\u2019 funds on Terra\u2019s Anchor Protocol in order to fund their cross-platform bridge as well as sustain high APR on ValleySwap, the second project owned by the team. In a further effort to boost APR on ValleySwap, the team minted unbacked USDT, causing funds on Oasis Emerald to be unbacked, the network ValleySwap was based on.\\n\\nHowever, due to the collapse of Terra\u2019s ecosystem, EVODeFi lost their investment in Anchor Protocol, their unbacked USDT became worthless, and they had no liquidity to continue operations.\\n\\nThus, EVODeFi was forced to close their bridge, trapping millions of dollars worth of users\u2019 funds on Oasis, with no way to move funds out of Oasis Network without losing a majority of their fund\u2019s value.\\n\\n##### StableFund - $23 Million Loss\\n\\nStableFund was identified to be a Ponzi scheme. The project team can get a risk-free 3% handling fee, while it was marketed that the participants can get 1.5% rewards every day, and they can choose to get their principal back after 4 weeks. \\n\\nIn reality, the project does not have any profit-making method, to sustain the high 1.5% daily yield. The rewards of the first entrants need to be paid by the principal of the latter entrants, this is the standard Ponzi feature. \\n\\nThe project started from 2022-06-27, where >13k addresses have participated, and more than $23 million have been invested into the pools so far.\\n\\n##### Elephant Money - $22 Million Loss\\n\\nOn 13th April 2022, Elephant Money was exploited, resulting in the loss of 27,416.46 BNB. The attacker first used WBNB to buy a large amount of ELEPHANT, and then used BUSD to mint the TRUNK stablecoin. During the minting process, the Elephant contract will convert BUSD to WBNB and then back to ELEPHANT to drive up the ELEPHANT price. \\n\\nThe root cause was that the vulnerable contract relied on the instantaneous price of ELEPHANT-WBNB liquidity pool. Since, the value of ELEPHANT was artificially inflated, the attacker could mint more TRUNK stablecoin, which he can redeem back for WBNB and BUSD.\\n\\n##### Transit Finance - $21 Million Loss\\n\\nOn 1st October 2022, Transit Finance / Swap (a cross-chain protocol) was exploited for > $21m. Essentially, this attack targeted the users directly via a vulnerability in the use of the transferFrom() function. Any tokens approved for trading on Transit Swap could be transferred directly from users\u2019 wallets to the unknown exploiter\u2019s address.\\n\\nThankfully, > $18.9m was returned back to Transit Finance on both chains (ETH and BNB).  \\n\\nThe root cause was that there was a lack of validation for input parameters. The hacker parsed in the Permissions management contract to the vulnerable contract and called the claimTokens function to do a transferFrom from users that have unlimited approval to this contract.\\n\\n##### ANKR / Helio - $20 Million Loss\\n\\nOn 2nd December 2022, Ankr protocol was exploited for around $5m, but what was surprising was 1 of their products, Helio, was impacted as well for > $15m, bringing the total damage to > $20m. Essentially, the root cause was that the private key of the Ankr deployer was compromised. According to the team, it was an insider attack that stole the private key. As such, the exploiter introduced a backdoor function and minted a large amount of unbacked aBNBc tokens to drain the liquidity pool for BNB. \\n\\nHelio was impacted because one of the ways to provide collateral on their platform was aBNBc. Since the value of aBNBc has plummeted, many users seized the opportunity to purchase it at a valuation below market value. At the same time, Helio uses Chainlink to reflect the actual value of BNB at that point of time. As such, these users had a higher collateral value than expected where they could borrow large amounts of $HAY (platform\u2019s stablecoin) and not pay back the debt.\\n\\n\\n##### Racoon Network and Freedom Protocol - $20 Million Loss\\n\\nOn 20th July 2022, Racoon Network and Freedom Protocol performed a rugpull. More than 20 million USDT were transferred to the same EOA address, suggesting that they belong to the same party. 10% of the funds were transferred from Raccoon Network, while 90% of the funds were transferred from Freedom Protocol.\\n\\nFor Raccoon Network, the loophole is in the unverified token contract, Raccoon Network Token (RAC). In this token, every time a user transfers a RAC token, there is a 6% tax and the tax fees are transferred to an EOA, where the malicious project party could cash out to USDT anytime.\\n\\nFor the Freedom Protocol, the project party collected USDT by selling their NFTs at a price of 100 USDT. Afterwards, they did not continue their development and the funds have since been transferred out through CEXs.\\n\\n##### $FLARE - $17 Million Loss\\n\\nOn 14th November 2022, $FLARE token conducted an exit scam of ~$17m. Essentially, the root cause was the victim contract (unverified) allowed the attacker to use a faketoken as input to call getUserInfo() and then set some value to the \\"balance\\" related data structure.\\n\\nThe project has a rewards contract which rewards users who have invested USDT, in exchange they get USDT. Internally, there is this \u201cbalance\u201d related data structure which calls the investing contract and getUserInfo() to keep track of how much tokens have been invested.\\n\\nHowever, the lack of input validation allowed the exploiter to parse the address input of his faketoken, with the necessary getUserInfo() method and fake his amount invested.\\n\\n##### DEGO Finance / Cocos - $15 Million Loss\\n\\nOn 9th February 2022, DEGO Finance / Cocos were hacked for $15m. The hacker compromised multiple private keys of the team. As a result, the hacker removed liquidity from the projects and stole all funds from their hot wallets. The funds have already been bridged to ETH chain and deposited into Tornado Cash.\\n\\n### Conclusion\\n\\nBSC continues to be a strong competitor, outperforming Ethereum in terms of daily active users and transactions. However, it is undeniable that 2022 has proven to be a tough year for both investors and developers due to the bear market and hack incidents, which impeded trust within the cryptocurrency community. Below we have some final tips for investors and developers:\\n\\nFor investors:\\n- Understand what you\'re signing, don\'t blindly sign random signatures/transactions (never sign signatures outside of official websites)\\n- Always double check that you are on the official website of the DApp\\n- Be extra wary of new/trending projects or projects that guarantee High APYs / use MEV bots, and always verify the project team\u2019s authenticity\\n- Use multiple wallets for different activities (hot wallet for frequent transactions; cold wallet to store high value funds)\\n- Ensure you are interacting with an open-source contract and revoke approval once interaction is done\\n- Check the security and risk scores of interacted contracts (e.g when using Trust wallet) \\nIf *High Risk* is flagged, we strongly advise to stay away\\n\\n**Feel free to reach out to our team if you have any doubts about a certain project / contract address / transaction / risk score!**\\n\\nFor developers:\\n- Verify & open-source all relevant contracts on-chain (to ensure transparency and trust within the space)\\n- Ensure the project is audited by at least 2 well-known security companies and fix all issues where applicable (Including auditing newly added code)\\n- Incorporate / Implement a bug-bounty program to upkeep the security posture of the project and encourage the community to ensure the code remains secure\\n- Ensure security is at the core of the business: run sufficient testing / stress-testing / simulations such as (1) adverse token price fluctuations, (2) edge cases\\n- Prevent centralization risks by using multi signature wallets and not a single EOA wallet to run operations\\n- Minimize contract upgradeability and only apply to contracts when necessary\\n- Ensure funds are stored securely (key management, fund distribution)\\n- Implement safeguards in the event of a hack (formulate an Incident Response plan, introduce time lock / pausing within the smart contract)\\n- Constant monitoring of system parameters e.g Exchange Rate of a token\\n\\n\\n#### Hashdit\\n\\nHashDit\u2019s core mission is to provide the essential threat intelligence for the everyday crypto investors to make informed decisions. Our methodology includes a variety of automated and manual techniques to evaluate a DApp project. \\n\\nThanks to our ever hardworking team, Hashdit has launched several products in 2022.\\n\\nProducts at Hashdit currently:\\n- **Risk assessment**: All-in-one collection of security rating framework, auto-scan tools, and corresponding APIs, which are able to deliver accurate detection for potential rugpull/exploit risks based on a smart contract address. This is integrated with platforms like [Trust Wallet](https://trustwallet.com/) and [PancakeSwap](https://pancakeswap.finance/), to leverage their reach and protect more users. \\n\\n    It is able to detect multiple other risks, besides the usual SWC bugs, such as Tornado Cash interaction, risky functions encompassing ERC20 or ERC721 token standards (such as Migrate() or Blacklist() ), HoneyPot detection, etc. This can help users gain a better understanding of the smart contract, if it could be a scam.\\n\\n- **Audit service**: Comprehensive code audits following extensive and detailed best practices for smart contracts and discovering code loopholes / security vulnerabilities before they are deployed on-chain, guaranteeing users\u2019 safety on BSC. \\n\\n- **Monitoring**: Detecting sensitive events / transactions that happen on-chain to quickly respond and minimize any additional financial losses. At the same time, Hashdit warns users early by sharing any information we found on our [Twitter](https://twitter.com/hashdit?s=21&t=U4gLkKc72FyZ1zfJDsWzqg) \\n\\n- **Blog**: Our goal is to share our security knowledge for builders, investors and users in the Web3 community. With all the players in the industry equipped with the security knowledge needed and adopting a security-first mindset, only then will the Web3 ecosystem be a safer place for everyone. \\n\\nIn addition, Hashdit is a major contributor to [AvengerDAO](https://avengerdao.org/), a community-run security initiative to ensure user safety on BSC. Working together with other security companies in the industry, we will aim to reduce the security incidents on BSC, and especially towards Bridge projects and Scams. We are excited to present even better products in the future and improve BSC overall security.\\n\\nTo a better year ahead! Happy new year to all! \\n\\n### Glossary\\n\\n#### General Incident classification\\nThe type of incidents can be generally broken down into 3 types:\\n\\n* Hacks\\n    * Hacks in general, is the practice of intentionally exploiting weaknesses in an organization\'s computer systems. In the context of blockchain, it is exploiting vulnerabilities in fundamental components of DApps and in the blockchain infrastructure. The non-exhaustive  list of components can be: blockchain bridges, oracles, crypto wallets, Frontend/backend application and smart contracts which are deployed on-chain. Examples include business logic issues and lack of validation.\\n    * At times, it could be compromising the private keys of project teams through traditional attack vectors.\\n\\n* Scams\\n    * Scams are Web3 projects that do not intend to deliver promised features. Indeed, they usually entice users to invest or participate in the project with the only intent of keeping their invested money and leaving the users hanging. \\n    * Scams could be executed by dumping tokens, stealing all the invested funds, through means like sending sketchy emails and websites, or creating fake accounts on social media. In the context of blockchain, scams can involve investing in a \u201cGet-rich-quick scheme\u201d such as a Ponzi scheme or tricking users into signing unintended transactions that will result in stolen funds.\\n    \\n    * Do refer to our blog article for more details on the [top 6 crypto scams](https://hashdit.github.io/hashdit/blog/top-6-crypto-scams-2022/) in 2022. \\n\\n* Improper Management\\n    * Improper Management is a unique situation where the project party mismanages components that associate with user funds. Some examples include application misconfiguration issues that could expose critical information about users / project funds, or when the project party mints uncollateralized funds to perform high risk trading. This will be at the expense of users\u2019 funds being lost.\\n\\n#### Project type classification\\n\\n* Bridge\\n    * A blockchain bridge is a tool that lets you port assets from one blockchain to another, solving one of the main pain points within blockchains \u2013 a lack of interoperability. Since blockchain assets are often not compatible with one another, bridges create synthetic derivatives that represent an asset from another blockchain.\\n\\n* DeFi (Decentralized Finance)\\n    * Decentralized finance (DeFi) is a new financial framework consisting of decentralized blockchain protocols and underlying smart contract technology. DeFi, as it is most commonly known, makes it possible for users to access different types of financial products and services without the need for a centralized authority.\\n\\n* GameFi (Play-to-Earn)\\n    * \'GameFi\' refers to the financialisation of video gaming. It is characterized by its \'play-to-earn\' (P2E) business model, and mainly refers to blockchain games that offer tokenized incentives to players while enabling frameworks for player-as-owner rather than the standard player-as-consumer.\\n\\n* Learn-to-Earn\\n    * \'Learn-to-Earn\u2019 refers to the financialisation of quizzing. It is characterized by the business model, which offers tokenized incentives to players who participate in the project and answer quizzes.\\n\\n* Metaverse\\n    * Crypto metaverses are immersive virtual worlds with immense social and financial potential. Their use of blockchain infrastructure enables them to tap into the wider crypto economy, making virtual items exchangeable for real economic value beyond the confines of the metaverse.\\n\\n* SocialFi\\n    * SocialFi is the fusion of social media and Web3. It refers to social media on a blockchain with a layer of finance in it. The concept brings together the principles of decentralized finance (DeFi) and social media to create, manage, and own content generated by the users on the platforms.\\n\\n* ExerciseFi\\n    * ExerciseFi or Move-to-Earn as its name implies, users are rewarded for movement, whether walking, running or dancing to a rhythm.\\n\\n* Oracle\\n    * Oracles are complex computerized systems that connect data from the outside world (off-chain) with the blockchain world (on-chain). Most blockchains have native cryptocurrencies that are used to transfer value, enable the operations of the protocol, or facilitate governance.\\n\\n* Wallet\\n    * A Cryptocurrency Wallet is an application that functions as a wallet for your cryptocurrencies. It is called a wallet because it is used similarly to a wallet you put cash and cards in. Instead of holding these physical items, it stores the rivate keys you use to sign for your cryptocurrency transactions and provides the interface that lets you access and manage your cryptocurrencies.\\n\\n* DAO\\n    * A decentralized autonomous organization (DAO) is an emerging form of legal structure that has no central governing body and whose members share a common goal to act in the best interest of the entity.\\n\\n</div>"},{"id":"repackaged-apps-are-harmful","metadata":{"permalink":"/hashdit/blog/repackaged-apps-are-harmful","source":"@site/blog/2022-12-19/2022-12-19.md","title":"Repackaged Apps are harmful","description":"During the past years, Android strengthened its leadership among all mobile operating systems, with an average of approximately 70.96% of the market share. Most of its success is no mere temporary surge because of the developer-friendly application development process. Google offers a plethora of platforms that support the design and development, testing, and sharing of their applications. Consequently, the number of applications in the Google Play Store reached 2.6 million in 2022.","date":"2022-12-19T00:00:00.000Z","formattedDate":"December 19, 2022","tags":[{"label":"web3-security","permalink":"/hashdit/blog/tags/web-3-security"},{"label":"repackage","permalink":"/hashdit/blog/tags/repackage"},{"label":"2022","permalink":"/hashdit/blog/tags/2022"}],"readingTime":4.105,"hasTruncateMarker":false,"authors":[{"name":"Rex, Zachary","title":"SCS@HashDit","key":"Zachary"}],"frontMatter":{"slug":"repackaged-apps-are-harmful","title":"Repackaged Apps are harmful","authors":["Zachary"],"tags":["web3-security","repackage","2022"]},"prevItem":{"title":"2022 End of Year BSC Security Report","permalink":"/hashdit/blog/bsc-2022-end-of-year-report"},"nextItem":{"title":"Top 6 Most Popular Crypto Scams In 2022","permalink":"/hashdit/blog/top-6-crypto-scams-2022"}},"content":"During the past years, Android strengthened its leadership among all mobile operating systems, with an average of approximately 70.96% of the market share. Most of its success is no mere temporary surge because of the developer-friendly application development process. Google offers a plethora of platforms that support the design and development, testing, and sharing of their applications. Consequently, the number of applications in the Google Play Store reached 2.6 million in 2022. \\n\\nHowever, to put that another way, from a security standpoint, the remarkable growth of Android coupled with the fact that a large number of innocent mobile users may become potential victims of cyber attacks. One of the prevalent types of attack is something called repackaging. Repackaging refers to the practice of customizing an existing mobile app and redistributing it in the wild. Specifically, attackers modify a popular app downloaded from app markets, reverse-engineer the app, inject some malicious code, and redistribute the modified app. Because it is difficult for regular users to notice the difference between the repackaged app and the original app, victims may suffer financial loss, mainly when security-critical private and business apps they use, such as Crypto Exchange apps, are repackaged.\\n\\n## Repackaged Android Apps\\n\\nSome may get astounded by the fact that Android app is prone to repackaging. We can say that Android is negligent in such an attack. That\'s because of the intrinsical relation to the structural characteristics of the app distribution process. The app requires \\"ANY\\" valid signature to be successfully installed \u2014 they do not verify the actual identity of the signer. The app developer (even including the bad actor!) does not need a legitimate public key certificate issued by a trusted authority, indicating the possibility that an actor can modify an existing app, inject some harmful codes, and re-sign it with the self-generated private key. \\n\\n\\n\\n\\n\\nWhat happens when you have installed the repackaged app on your mobile device? Based on our experience,\\n\\n- Plifering cryptocurrencies\\n- Stealing your credentials (Account Information, Passport Copy for KYC, ...)\\n- Leaking your secret phrases\\n- Or... almost everything you can imagine is possible!\\n\\n## 2 helpful guidelines for giving the app a check\\n\\nWhether you\'re downloading an app as a customer or as a developer NOT via the official app store such as Google Play, there are some essential guidelines and tips that you need to consider to guarantee the safety of your device. Let\'s check them out!\\n\\n### Protip 1. Establish trust via download links.\\n\\nWhen reading a blog post, you may find they are hosting a third-party download. Clicking the button may lead to potential problems \u2014 you must validate the address beforehand. In the case of Binance, the address should be `https://download.binance.com/pack/BNApp.apk`, as shown in the picture below.\\n\\n![IMG-1](./1.png)\\n\\nBut remember, scammers are becoming more innovative and intelligent, and they can disguise the URL to make it look safe. The malicious URL can be various: `https://download.b1nance.com/` or `https://download.blnance.co/`. Although you find the post with no apparent problem, please proceed cautiously!\\n\\n### Protip 2. Check the digital signature.\\n\\nWith a tool called apksigner, you can check the app\'s authenticity. The apksigner tool, available in revision 24.0.3 and higher of the Android SDK Build Tools, lets you sign APKs and confirm that an APK\'s signature will be verified successfully on all Android platform-supported versions by that APK. Make a comparison between the original and repackaged versions \u2014 you may immediately sense the difference.\\n\\nThe syntax for confirming the successful verification of an APK\'s signature on supported platforms is as follows:\\n\\n`apksigner verify [options] app-name.apk`\\n\\nThe apksigner verify command has the following options.\\n\\n**--print-certs**\\n\\nShow information about the APK\'s signing certificates.\\n\\n**--min-sdk-version <integer\\\\>**\\n\\nThe lowest Android framework API level that apksigner uses to confirm that the APK\'s signature will be verified. Higher values allow the tool to use more robust security parameters when signing the app but limit the APK\'s availability to devices running more recent versions of Android. By default, apksigner uses the value of the minSdkVersion attribute from the app\'s manifest file.\\n\\n**--max-sdk-version <integer\\\\>**\\n\\nThe highest Android framework API level that apksigner uses to confirm that the APK\'s signature will be verified. By default, the tool uses the highest possible API level.\\n\\n**-v, --verbose**\\n\\nUse the verbose output mode.\\n\\n**-Werr**\\n\\nTreat warnings as errors.\\n\\n## Conclusion\\n\\nYou should only trust apps obtained from official app stores. Suppose you ever downloaded the Binance app from third-party markets or have already installed it. In that case, you are probably at risk \u2014 immediate action is required: change your password, factory reset your device, fresh-install it from our official host, and please contact us for assistance.\\n\\nOther apps also can be a potential backdoor. Once you use the repackaged app, the lousy actor can annoy you in countless programmatically unimaginable ways. Telegram is a good example: Hashdit once ever stumbled across an unofficial Telegram app replacing crypto wallet addresses with the bad actors\' ones on-the-fly."},{"id":"top-6-crypto-scams-2022","metadata":{"permalink":"/hashdit/blog/top-6-crypto-scams-2022","source":"@site/blog/2022-11-25/2022-11-25.md","title":"Top 6 Most Popular Crypto Scams In 2022","description":"Back in 2021, crypto scams were a growing attack vector tricking victims into investing in the crypto space. According to CNBC, more than $1 billion were lost to crypto scams in 2021, where the most common types include fake investments and romance scams.","date":"2022-11-25T00:00:00.000Z","formattedDate":"November 25, 2022","tags":[{"label":"smart-contract-security","permalink":"/hashdit/blog/tags/smart-contract-security"},{"label":"scams","permalink":"/hashdit/blog/tags/scams"},{"label":"2022","permalink":"/hashdit/blog/tags/2022"}],"readingTime":12.57,"hasTruncateMarker":false,"authors":[{"name":"Sebastian Lim","title":"SCS@HashDit","url":"https://github.com/slim115","imageURL":"https://github.com/slim115.png","key":"Sebastian"}],"frontMatter":{"slug":"top-6-crypto-scams-2022","title":"Top 6 Most Popular Crypto Scams In 2022","authors":["Sebastian"],"tags":["smart-contract-security","scams","2022"]},"prevItem":{"title":"Repackaged Apps are harmful","permalink":"/hashdit/blog/repackaged-apps-are-harmful"},"nextItem":{"title":"How to Spot a Potential Rug in 10 Minutes","permalink":"/hashdit/blog/10-minutes-rugpull"}},"content":"Back in 2021, crypto scams were a growing attack vector tricking victims into investing in the crypto space. According to [CNBC](https://www.cnbc.com/2022/06/03/crypto-scams-cost-people-more-than-1-billion-since-2021-ftc.html), more than $1 billion were lost to crypto scams in 2021, where the most common types include fake investments and romance scams.  \\n\\nSince then, 2022 has shown that scammers are getting more and more creative.\\n\\nAs a leader in securing the BNB Chain ecosystem, it is our duty to keep users in the BNB Chain ecosystem safe by making sure they are always one step ahead of these scammers. Here are the most popular scams this year:\\n\\n### 1: Phishing Link Scams \\n\\nPhishing is already a popular technique used by scammers in Web 2. This is because scammers can just create a malicious website and subsequently mass send the links to their victims. Here, we will focus mostly on ways that the scammers will try to steal your private keys. \\n\\nIn Web 3, scammers usually send their phishing links through different mediums where the Web3 community is, like Discord, Twitter, Telegram, and even On-Chain.\\n\\n![IMG-2](./2.png)\\n\\nPhishing websites usually look like the real website, but with different url names. They can be about a new giveaway or NFT pre-mint events, basically any situation that will make the user feel excited (FOMO - Fear Of Missing Out) and not think straight. The scammer takes advantage of the user\u2019s emotional instability.\\n\\nThey can blatantly be asking for the user to provide his seed phrase or private key. For example, contacting  users on  social media,reaching out as wallet software support and jumping in with direct messages spoofing as an Exchange Support to steal one\u2019s private key directly.\\n\\nAnother way is that scammers will develop chrome extensions that look similar to legitimate ones like Metamask. By impersonating the real applications, users often are led to letting their guard down and provide their private key to use the new application.\\n\\nOne interesting tactic we noticed is that scammers will also try to trick users into thinking there is a new bug/vulnerability with existing applications and there is a new software upgrade. We detected a scammer trying to trick users into thinking the current Metamask version had a bug and users should upgrade to the new version. The scammer proclaimed in the message that the new upgrade is not out yet so the upgrade has to be done manually this time. He afterwards gave a set of instructions which aims to trick the user into providing his metamask password which will expose his private key to the scammer.\\n\\nIn this scenario, users should always wait for the official announcement from Metamask and upgrade their Metamask version from official sources.\\n\\nTo upgrade an extension, just head to chrome://extensions/ \\n\\nClick on the update button\\n\\n![IMG-3](./3.png)\\n\\nThis will update all your extensions accordingly.\\n\\n##### A friendly reminder: \\nNormal application upgrades WILL NOT require a user to provide sensitive information such as login credentials. \\n\\n### 2: Ice-Phishing \\n\\nThis is a tactic where the user is tricked into signing a transaction that gives an attacker control over the user\u2019s tokens, without the leakage of his private keys. This is an extension of the Phishing technique.\\n\\nFor some background, when a user is using DeFi applications (e.g PancakeSwap) and interacting with the main token standards (e.g. ERC-20, ERC-721, and ERC-1155) the approval method is shown on their metamask window. This is a request for the user to delegate authority to a 3rd party to act on behalf of that user on those tokens. Afterwards, the user can perform other operations like performing a swap.\\n\\nAttackers will direct users to the phishing website and induce them to sign some transactions that they didn\'t request. For example, the interacted contract might not even be a contract, but the attacker\u2019s address. Once the approval transaction is done, the attacker has the authority to transfer funds out of the victim\u2019s wallet.\\n\\nUsually, the scam website has an algorithm to scan the victim\u2019s wallet to detect the valuable assets such as an expensive BAYC NFT or cryptocurrencies like WBTC or WETH. Often, the website will continually show the metamask window to prompt users to sign another transaction even though they may have already signed once.\\n\\nAnother way to prevent being a victim of Ice-Phishing is to stay away from signing eth_sign transactions. They usually look something like this: \\n\\n![IMG-4](./4.png)\\n\\nThe method eth_sign is an open-ended signing method that allows signing an arbitrary hash, which means it can be used to sign unclear transactions, or any other data, making it a dangerous phishing risk.\\n\\nAn arbitrary hash here means that the usual suspects of approve or approve for all methods are not the only possible methods, the scammer can make you sign transactions like native token transfer or a contract call. Essentially, having almost full control of your account without even holding your private key!\\n\\nAlthough MetaMask will display a risk warning when signing eth_sign requests, when combined with other phishing techniques, it can still be possible for users with no security experience to fall for these traps.\\n\\n### 3: Event Spoofing & NFT Sleep Minting\\n\\n#### Event Spoofing\\n\\nEvent spoofing is a tactic where scammers transfer random BEP20 tokens to users, and prompt users to interact with it. The catch is that even though the scammer is the one transferring the tokens, from the blockchain explorer like BscScan, it will show that the source of funds were from a separate wallet such as Binance Hot Wallet. Then, they will be enticed to interact with these new \u2018free\u2019 tokens which can lead to users to phishing websites by displaying a link in the token name or the code itself. This is an extension of the Phishing technique.\\n\\nThis method takes advantage of how blockchain explorers show events. \\n\\nFor example, this screenshot from BscScan shows CHI being sent from Null Address to the address 0x7aa3\\n\\n![IMG-5](./5.png)\\n\\nFrom the code perspective, this means that at the line emit Transfer(...)\\n* msg.sender -> Null address (_from)\\n* _to -> 0x7aa3\\n* _value -> 294\\n\\n![IMG-6](./6.png)\\n\\nHowever, blockchain explorers will blindly use the parameters of the emit events. If the _from address is changed to another address for e.g 0xhashdit, then BscScan will display the CHI being sent from 0xhashdit to the receiving address. Note: this isn\u2019t particularly a bug with blockchain explorers, but more of the flexibility to change parameters since BscScan cannot know for sure whether the parameters are accurate. As such, scammers can use this to their advantage and spoof the source of funds.\\n\\nLook at our twitter [post](https://twitter.com/HashDit/status/1557536292979855360) for such an example! \\n\\n#### NFT Sleep Minting\\n\\nBuilding on plain BEP20 event spoofing, scammers can be creative with how they execute their scam. NFT Sleep Minting is when a scammer mints an NFT directly to a famous creator\u2019s wallet. However, the NFT code has a backdoor method where the scammer can reclaim the NFT back. This creates the appearance that (1) the famous creator authentically minted an NFT to themselves; and then (2) sent that NFT to a scammer. Based on the \u201con-chain\u201d provenance, the scammer can claim they own an NFT minted by a famous creator and sell it for a higher value, faking the value in the process.\\n\\nThe deception of Sleep Minting comes from the fact that you can emit any piece of data in an Event log. One would expect that if the user sends a transaction to transfer an NFT, then your address should be in the Event log as the \u201cfrom\u201d field. However, that is not the case when a scammer reclaims a sleep-minted NFT from a famous creator. A scammer could artificially place the famous creator\u2019s address in a Transfer Events \u201cfrom\u201d field, completing the illusion.\\n\\nFor exmaple, we can take a look at Beeple\'s [account](https://etherscan.io/address/0xc6b0562605d35ee710138402b878ffe6f2e23807#tokentxnsErc721) and observe several NFTS minted to him, and not exactly minted by him.\\n\\n### 4: Ponzi Scams\\n\\nIn these scams, there is usually no real strategy to earn rewards or make profits. Essentially, the whole scheme uses the money of new investors to pay the old investors. Once there is no more new money coming in to support the scheme, the whole system will fail.\\n\\nThere are several telltale signs in a Crypto Ponzi Scam:\\n\\n##### First, the project side collects tax fees and these fees keep users longer in the ecosystem. \\nSince every deposit/compounding action incurs some sort of fees, this means that the user has to compound for a longer period of time in order to break even. These fees are also used to pay back the dividends of the users who want to claim. \\n\\n##### Second, there is no way to withdraw the user\'s initial invested funds. \\nOnce one user deposits their initial tokens, there is no way for him to withdraw back his initial invested funds. The only way for the user to get back any funds is to claim back dividends. \\n\\n##### The third way is using a referral system. \\nThe project encourages participants to actively promote and refer others through the referrer benefits. The upline will receive additional rewards whenever a downline performs certain actions. Also, in order for a user to start participating in the protocol, he has to have an upline address to start. This creates a system where each address is linked to another, similar to a pyramid scheme. There are increased bonuses for having more than 5 downline addresses too.\\n\\nA common theme that one will see is a steep rise in funds locked in the contract at the start, usually driven by the initial hype through marketing by the team or funds pumped by the team themselves to generate activity. Once the contract\u2019s balance has reached an inflection point, this means there are no new funds coming in. This will slowly result in the scheme falling apart and the new investors panicking to withdraw as much dividends as possible.\\n\\n![IMG-7](./7.png)\\n\\nAt the end of the day, the project party which solely earns the tax fees will be the biggest beneficiary for such Ponzi scam projects.\\n\\n### 5: CHI Gas token farming\\n\\nCHI Gas token is an initiative by 1inch project, where the Chi Gastoken is a BEP20 token that is meant to be used on 1inch exchange to pay transaction costs. Chi is pegged to the network\u2019s gas price. When the gas price is low, the Chi price is also low, and the opposite. \\n\\nHow scammers make use of this is very interesting. First, they would airdrop a bunch of random BEP20 tokens. When the user approves PancakeSwap to sell these tokens, in the approve() method of these tokens it will hard coded to consume a large amount (e.g above 90%) of the user\'s gas limit to mint Chi Gastoken which can be used to subsidize the gas fee, the minted Chi Gastoken are the profit of the scammers. \\n\\nIt is recommended to pay attention to the consumed condition of gas fee in approval transactions before calling the approve() function in some airdrop tokens.\\n \\n##### In general, don\u2019t touch random tokens airdropped to you\\n\\nLook at our twitter [post](https://twitter.com/HashDit/status/1573330966969720835) for such an example!\\n\\n### 6: MEV Scams / Scam Events\\n\\n#### Crypto Jargon\\n\\nScammers will make use of crypto jargon like \u201cMEV (Maximal Extractable Value)\u201d, \u201cArbitrage trading bot\u201d, \u201cSniper bot\u201d, \u201cFront-run bot\u201d promising passive income of a few thousand dollars a day to entice users to participate. These are usually promoted on platforms like Twitter, Tiktok and Blockchain Explorers.\\n\\nUsually, scammers will attach a video link to the post where victims are brought to video hosting platforms like Youtube and Vimeo.\\n\\nExample:\\n\\n![IMG-8](./8.png)\\n\\nEssentially, the scam video will guide the user to deploy their malicious code using the [Remix IDE](https://remix.ethereum.org/), they will provide the malicious code usually in a pastebin url in the video description. \\n\\n![IMG-9](./9.png)\\n\\nWith the code now deployed on-chain, the user will be instructed to next prepare some native funds to perform the \u2018front run or arbitrage\u2019. The scam video will prompt the user to prepare more native funds so that when you perform the \u2018front run or arbitrage\u2019 operation, you will be able to make more profits, tricking the user. Once the user injects the funds into the contract and \u2018starts the front run\u2019, instead of earning him profits like what the scammer claims to do, the funds will be directly transferred to the scammer\\n\\nAnother relatively new way is for scammers to provide a link for CEX (Centralized Exchange) trading bots such as the screenshot here.\\n\\n![IMG-10](./10.png)\\n\\nUsers will be prompted to download a malicious file and follow the instructions. Usually, users that want to trade on Binance Exchange automatically will have an API key. This scam video tricks users into using their trading bot and asking users to give up their API key and the password for it. Once the user is scammed into doing so, the scammer will be able to receive the user\u2019s credentials on their end and trade with the user\u2019s funds now.\\n\\n#### Crypto Event\\n\\nIn such situations, scammers also use social media to spread fake information of a giveaway being done by notable players in the space such as crypto exchanges or projects.\\n\\n![IMG-11](./11.png)\\n\\nUsers will be prompted to enter this link and are instructed to \u201cverify\u201d their address first. In order to so, they have to send some BTC or BNB to the specified address and in return they will get back 10x of the amount. At the same time, the scam website shows a transaction history of the giveaway records to trick users into thinking that the giveaway is real and works. However in reality, once the crypto is sent by the user, the funds will be lost to the scammer and there will be no rewards to receive in the end. \\n\\nOftentimes, scammers might use old videos or even resort to deep faking a popular figure, to trick users into thinking that the person is endorsing and promoting a new giveaway. When in reality, this cannot be further away from the truth.\\n\\nA common similarity among these cases is that there will be fake engagement in the video\u2019s comment section. This is to psychologically trick users into thinking that this trading bot really works well.\\n\\n![IMG-12](./12.png)\\n\\nAlso, if this is in the description, **RUN**. It is a HUGE red flag.\\n\\n![IMG-13](./13.png)\\n\\n### Conclusion\\n\\nScams will continue to grow in a decentralized environment such as crypto so it is critical for us to each be responsible for our own security. To beef up the security and safety of users in the BNB Chain, Hashdit has been partnering with ecosystem players such as PancakeSwap and AvengerDAO to detect scams as soon as possible. Moving forward, we will strive to build a safe ecosystem for both protocol users and smart contract developers on the BNB Chain. \\n\\nIf you found this article useful, please share it around on Twitter and tag us! If there are any scams you would like us to cover as well, please drop us a message! \\n\\nRemember the golden rule: **If it is too good to be true, it probably is**. Till then, stay safe!"},{"id":"10-minutes-rugpull","metadata":{"permalink":"/hashdit/blog/10-minutes-rugpull","source":"@site/blog/2022-09-24-10mins/2022-09-24-10mins.md","title":"How to Spot a Potential Rug in 10 Minutes","description":"Rugged. Rugged. Rugged.","date":"2022-09-24T00:00:00.000Z","formattedDate":"September 24, 2022","tags":[{"label":"smart-contract-security","permalink":"/hashdit/blog/tags/smart-contract-security"},{"label":"rug-pull","permalink":"/hashdit/blog/tags/rug-pull"},{"label":"how-to","permalink":"/hashdit/blog/tags/how-to"}],"readingTime":6.45,"hasTruncateMarker":false,"authors":[{"name":"Ayden Duan","title":"SCS@HashDit","url":"https://github.com/a4dyn","imageURL":"https://github.com/a4dyn.png","key":"ayden"}],"frontMatter":{"slug":"10-minutes-rugpull","title":"How to Spot a Potential Rug in 10 Minutes","authors":["ayden"],"tags":["smart-contract-security","rug-pull","how-to"]},"prevItem":{"title":"Top 6 Most Popular Crypto Scams In 2022","permalink":"/hashdit/blog/top-6-crypto-scams-2022"}},"content":"Rugged. Rugged. Rugged.\\n\\nIf you are a DeFi investor, you have definitely heard of these words. As newly DeFi projects mushroom to BSC chain each day, not all of them are good \u2014\u2014 be careful, they might steal your investment! According to the 200 most recently launched DeFi project analysis in RugDoc, 28% of them are tagged as \u201cHigh Risk\u201d, which means that they are highly likely to lead to catastrophic losses as they are right now, and 29% of them are marked as \u201cSome Risk\u201d that have ability to perform soft rug, and only 43% of them are \u201cLow Risk\u201d or \u201cNo Risk\u201d.\\n\\nIn other words, there is more than 28% probability that you lost all your the investment on DeFi project (if you randomly picked one!). Such lost maybe due to ignorance, credulous, or lack of learning. So, how do you control the risk of investment in DeFi and how to identify whether the project has a high likelihood of screwing you over? This article helps you to spot a potential rug DeFi project by following some simple steps, which only takes around 10 minutes. Remember, scammers are becoming smarter and smarter and they are able to disguise their project to make it look safe. So, even if you find a project with no obvious problem \u2014\u2014 proceed with caution!\\n\\n### Step 1: Verify the contract you are interacting with\\n\\nWhen we enter a project\u2019s website, they may have a reference to which MasterChef contract you are interacting with. However, it might be a lie! The contract you are actually interacting with may be different to the one they posted on the website. To verify this, the most trustable way is to do a \u201ctest\u201d transaction: \\n\\n![IMG-1](./image_23-30-20.png)\\n\\n\\nTake MetaMask as an example, the contract you are actually interacting with is shown on the right corner. Copy it with a left click and check whether the contract address is the same as they show to you. Also make sure the contract source code is \u201cverified\u201d by BscScan (check whether there is a green mark above \u201cContract Name\u201d). \\n\\n(Verified contract has a green mark above \u201cContract Name\u201d)\\n\\n![IMG-2](./image_23-30-51.png)\\n\\n### Step 2: Check the \u201cowner\u201d of contracts\\n\\nIn a DeFi project, the MasterChef contract is the one who manages most operations, and you can verify the MasterChef contract by following step 1. However, MasterChef is super-powerful, and should not be owned by a regular address. Honest developers will create a Timelock contract to own the MasterChef, and each write operation by the owner to MasterChef will be delayed for a period of time, giving you time to take your investment out if developers made any mistake. On the other hand, evil scammers try to own the MasterChef themselves \u2014\u2014 so that they can take away your money in a second. Usually, the ownership graph between each contract is shown as follows: \\n\\n![IMG-3](./image_23-30-51.png)\\n\\nSuch verification can be done by reading the contract variable and verifying the addresses on BscScan. Let\u2019s walk through this process with an example of PancakeSwap:\\n\\n1. Find the PancakeSwap MasterChef (0x73feaa1ee314f8c655e354234017be2193c9e24e) on BscScan.com, and click on \u201cRead Contract\u201d. \\n\\n![IMG-4](./image_23-31-58.png)\\n\\n2. Find the \u201cowner\u201d variable of the MasterChef.\\n\\n![IMG-5](./image_23-32-53.png)\\n\\n3. Click on the address link, and we found that it is a Timelock contract.\\n\\n![IMG-6](./image_23-33-41.png)\\n\\n4. Next, find the Token contract in MasterChef, the PancakeSwap token is named \u201ccake\u201d. This might vary from projects. \\n\\n![IMG-7](./image_23-34-41.png)\\n\\n5. Click on it, and find whether the owner of \u201ccake\u201d is the MasterChef contract we came from. \\n\\n![IMG-8](./image_23-35-0.png)\\n\\n6. Compare the addresses, they are the same! Meaning that the PancakeSwap project is safe (for now), Hoo-Yeah!\\n\\nNote: When checking the Timelock and Token contracts, make sure that they are \u201cverified\u201d by BscScan!\\n\\n\\n### Step 3: Check upgradable proxy & Timelock duration\\n\\nIf a project\u2019s MasterChef uses \u201cupgradable proxy\u201d (if you don\u2019t know what is an upgradable proxy, Click Here), then its code is totally modifiable by its owners. For such powerful contract like MasterChef, you generally do not want it be easily changed \u2014\u2014 cause the developers may replace the original MasterChef with an evil one. Thus making sure the project\u2019s MasterChef do not use proxy is very important. When you clicking on the \u201cContract\u201d, you do NOT want to see these extra buttons: \\n\\n![IMG-9](./image_23-35-28.png)\\n\\nThe \u201cRead as Proxy\u201d and \u201cWrite as Proxy\u201d means that they are using upgradable proxy to deploy their contracts. It does not always mean the end of the world, but you would better ask the developers why did they do so \u2014\u2014 and they\u2019d better give a reasonable answer.\\n\\nIn the previous step, we told you to check the Timelock contract, but we also need to make sure that the Timelock is actually locking some \u201ctime\u201d! To verify this, we go to the \u201cRead Contract\u201d of Timelock: \\n\\n![IMG-10](./image_23-36-16.png)\\n\\nAs you can see here, the minimum delay of this Timelock is 21600 seconds, which is 6 hours, and the current delay is set to 21700 seconds. This mean that the developers\u2019 action will be delayed for at least 6 hours before they take actual effects. Generally, you want the minimum delay time to be set above 6 hours \u2014\u2014 to not worry about your investments while you are asleep.\\n\\n### Step 4: Check commonly evil features\\n\\nThere can be lots of evil code hiding inside the contracts, and finding all of them is super time-consuming. Luckily, there are some commonly-used evil features by the scammers, and if you find the project you are about to invest contains one, or multiple of the following code, be careful, you might get rugged!\\n\\n* (High Risk) If they have the \u201cmigrate\u201d function in MasterChef. (Except PancakeSwap)\\n* (High Risk) Search \u201cfee => 10000\u201d and see if they have any fee up to 100%.\\n* (High Risk) If they have \u201csetVaultAddress\u201d function in MasterChef.\\n* (High Risk) Go to their website, check whether \u201cTotal Value Locked\u201d matches the sum up from their Liquidity Pools.\\n* (Medium Risk) Check whether the number of \u201cpoolLength\u201d in MasterChef matches the actual pool numbers on their website.\\n* (Medium Risk) If they have \u201cupdateStartBlock\u201d function in MasterChef, it might causes severe bug to the project if not used correctly.\\n* (Medium Risk) If their code highly matched the Panther project (0x058451c62b96c594ad984370eda8b6fd7197bbd4), then proceed with caution because Panther itself have some \u201crisks\u201d due to operator privileges, and the newly started DeFi project are more tend to abuse them.\\n\\nWoo-hoo! You luckily find your target DeFi project \u201cpassed\u201d all the steps listed above and is going to dip into it\u2026. Wait a minute! Passing this 10-minute test does not mean that it is totally safe, if you want to invest your lifetime money into it, think twice! As I mentioned above, this guide only helps you to make sure that the project does not do an \u201cobvious rug\u201d, but what if the scammers are smart? Here are some extra assessments you can do to lower your risk:\\n\\n* Check the top token holders of the project, they usually are the burn address or the staking contract.\\n* Look deeper into the code and find if the dev is able to drain funds or unlimitedly emit new tokens to itself.\\n* Track the transactions and ask dev team for any odd moves you found. Good dev will always give you space to ask questions.\\n* Search on the twitter & any public rug scanning community about the project, if they have not done the review on it yet, submit a request.\\n* Find whether the contract code has any audit. They\u2019d better have one or two paid audits to prove their code security.\\n* Do not put all your eggs in one bucket, and never invest what you can\u2019t lose."}]}')}}]);